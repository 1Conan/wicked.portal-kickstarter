extends layout

mixin renderApi(api, i)
    .row
        .col-md-2
            | &nbsp;
        .col-md-8
            .panel.panel-primary
                .panel-heading
                    table(width='100%')
                        tr
                            td
                                h4.panel-title 
                                    a(data-target='#collapse_#{i}' data-toggle='collapse') #{api.name}
                            td(style='text-align:right')
                                button(type='submit' onclick="setAction('deleteApi', #{i});").btn.btn-danger Delete API
                div(id='collapse_#{i}').collapse.panel-collapse
                    .panel-body
                        - var apiName = 'apis[' + i + '].'
                        +inputField2(apiName + 'id', apis, 'API ID:', 'string', 'The ID of the API; must only contain a-z, - and _.', 'readonly')
                        +inputField2(apiName + 'name', apis, 'API Name:', 'string', 'Friendly name of the API')
                        +inputField2(apiName + 'desc', apis, 'Short Description:', 'string', 'May contain Markdown')
                        .form-group
                            label Authentication Method:
                            select(name='#{apiName}auth' id='auth#{i}' onchange='javascript:checkAuth(#{i});').form-control
                                if "oauth2" == api.auth
                                    option key-auth
                                    option(selected) oauth2
                                    option oauth2-implicit
                                else if ("oauth2-implicit" == api.auth)
                                    option key-auth
                                    option oauth2
                                    option(selected) oauth2-implicit
                                else
                                    option(selected) key-auth
                                    option oauth2
                                    option oauth2-implicit
                            p.wicked-note Select <code>key-auth</code> for API Key authentication, or <code>oauth2</code> for OAuth 2.0 Client Credentials Flow, and <code>oauth2-implicit</code> for the OAuth 2.0 Implicit Grant Flow (requires an Authorization Server)
                        
                        - var oauthSettingsClass = 'collapse panel-collapse'
                        if (api.auth && api.auth.startsWith('oauth2'))
                            - oauthSettingsClass = oauthSettingsClass + ' in'
                        div(id='oauthSettings#{i}' class=oauthSettingsClass)
                            .panel.panel-default
                                .panel-heading
                                    h4.panel-title OAuth 2.0 Settings
                                .panel-body
                                    +inputField2(apiName + 'settings.token_expiration', apis, 'Token Expiration (seconds):')
                                    .form-group
                                        label Authorization Server (only for <code>oauth2-implicit</code>):
                                        select(name='#{apiName}authServer').form-control
                                            for authS in authServers
                                                if (api.authServer == authS)
                                                    option(selected)= authS
                                                else
                                                    option= authS
                                    +inputField2(apiName + 'settings.scopes', apis, 'Scopes:', 'string', 'Space-separated list of scopes. Only relevant for <code>oauth2-implicit currently</code>.')
                                    +checkBox(apiName + 'settings.mandatory_scope', apis, '<b>Mandatory Scope:</b> If specified, it is not possible to create access tokens without explicitly specifying a scope. Otherwise an access token with an empty scope may be created. Only applicable to <code>oauth2-implicit</code> APIs.')

                        +inputField2(apiName + 'tags', apis, 'Tags:', 'string', 'Comma-separated list of tags which apply to this API. Not yet used in portal.')

                        .form-group
                            label Required User Group:
                            select(name='#{apiName}requiredGroup').form-control
                                if !api.requiredGroup
                                    option(selected) &lt;none&gt;
                                else
                                    option &lt;none&gt;
                                each group, j in groups
                                    if group.id == api.requiredGroup
                                        option(selected)= group.id
                                    else
                                        option= group.id
                        .panel.panel-default
                            .panel-heading
                                table(width='100%')
                                    tr
                                        td
                                            h4.panel-title
                                                a(data-toggle='collapse' href='#apisubs#{i}') Subscription Plans
                                        td(style='text-align:right')
                                            a(href='/plans').btn.btn-default Plans &raquo;
                            div(id='apisubs#{i}').collapse.panel-collapse
                                .panel-body
                                    each plan, j in plans
                                        .checkbox
                                            label
                                                if api.plans.find(function(p) { return p == plan.id; })
                                                    input(type='checkbox' name='#{apiName}plans.#{plan.id}' checked='checked')
                                                else
                                                    input(type='checkbox' name='#{apiName}plans.#{plan.id}')
                                                | #{plan.id} - #{plan.name}
                        a(href='/apidesc/#{api.id}').btn.btn-info.btn-block API Long Description
                        a(href='/swagger/#{api.id}').btn.btn-info.btn-block Swagger File
                        a(href='/apis/#{api.id}').btn.btn-info.btn-block Kong Configuration
        .col-md-2
            | &nbsp;

block scripts
    script(type='text/javascript').
        function setAction(thisAction, index) {
            $('#__action').val(thisAction);
            $('#__object').val(index);
        }

        function checkAuth(apiIndex) {
            var newAuth = $('#auth' + apiIndex).val();
            if (newAuth.startsWith("oauth2")) {
                $('#oauthSettings' + apiIndex).collapse("show");
            } else {
                $('#oauthSettings' + apiIndex).collapse("hide");
            }
        }

block content
    .jumbotron
        .container
            h1 API configuration
            
            p Configure which APIs you want to expose via your API Portal
    
    .container
        form(role='form' method='post' action='/apis')

            input(type='hidden' id='__action', name='__action' value='none')
            input(type='hidden' id='__object', name='__object' value='none')
            
            each anApi, i in apis
                +renderApi(anApi, i)

            .row
                .col-md-2
                    | &nbsp;
                .col-md-8
                    .panel.panel-success
                        .panel-heading
                            h4.panel-title Add an API
                        .panel-body
                            .form-group
                                label New API ID:
                                input(name='newApiId' value='').form-control
                            button(type='submit' onclick='setAction("addApi");').btn.btn-success Add API &raquo;
                .col-md-2
                    | &nbsp;
            
            
            +renderButtons('/apis', '/plans', '/authservers')